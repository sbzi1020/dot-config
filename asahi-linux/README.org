* Asahi Linux Fedora Reminx Configuration

** How to fix =ip= command not found

You have to install =iproute= package to fix it

#+BEGIN_SRC bash
  sudo dnf install iproute
#+END_SRC


** How to install C Development tools

You have to install =C Development Tools and Libraries= before restoring =neovim= configuration to =~/.config/nvim=, as it requires the =cc= compiler:

#+BEGIN_SRC bash
  sudo dnf group install "C Development Tools and Libraries"
#+END_SRC


** How to use =dnf= pacakge manager

*** Configuration file: =/etc/dnf/dnf.conf=:

#+BEGIN_SRC text
  # see `man dnf.conf` for defaults and possible options

  [main]
  gpgcheck=True
  installonly_limit=3
  clean_requirements_on_remove=True
  best=False
  skip_if_unavailable=True
  allow_vendor_change=False
  max_parallel_downloads=10
  fastestmirror=True
  defaultyes=True
#+END_SRC


*** Fish abbreviations

There are a few abbreviations in =~/.config/fish/config.fish=:

#+BEGIN_SRC fish
  #--------------------------------------------------------
  # Package manager
  #--------------------------------------------------------
  abbr pinstall "sudo dnf install"
  abbr pginstall "sudo dnf group install"
  abbr psearch "dnf search"
  abbr pgsearch "dnf group list | rg"
  abbr pinfo "dnf info"
  abbr pginfo "dnf group info"
  abbr premove "sudo dnf remove"
  abbr pgremove "sudo dnf group remove"
  abbr pquery "dnf repoquery --installed" # Query only installed packages
  # abbr pqueryfile "dnf repoquery --installed --list"
  abbr pqueryfile "dnf repoquery --latest 1 --list" # When querying package files, query from repo latest version
#+END_SRC


*** Quick tutorial

**** Operation on single or multiple packages 

#+BEGIN_SRC bash
  # Install package
  sudo dnf install

  # Search for packages
  dnf search

  # Print package info
  dnf info

  # Remove packages
  sudo dnf remove
  # Remove older versions of duplicated packages
  sudo dnf remove --duplicates
#+END_SRC


**** Operation on groups

#+BEGIN_SRC bash
  
  # Install package group (DO NOT install optional packages)
  sudo dnf group install
  # Install package group (install optional packages)
  sudo dnf group --with-optional install

  # Query package group
  dnf group list | rg
  # Query installed package group
  dnf group list --installed | rg

  # List  package group info
  dnf group info

  # Upgrade packge group
  dnf group upgrade

  # Install package group
  sudo dnf group remove
#+END_SRC


**** Update or upgrade packages to latest

#+BEGIN_SRC bash
  # Check whether update exists or not without the real update action
  # `dnf check-upgrade` does the same thing
  dnf check-update

  # Update to latest `update` is same with `upgrade`!!!
  # `sudo dnf update` does the same thing
  sudo dnf upgrade
#+END_SRC


**** Clean up package

When you run =dnf info -v ANY_PACKAGE_NAME_HERE=, the output content contains =cachedir= like this:

#+BEGIN_SRC bash
  dnf info -v neofetch
  # cachedir: /var/tmp/dnf-fion-d7bhs3wh
#+END_SRC

That's the way how to print the =dnf= cache dir.

Also, there is the global cache dir in =/var/cache/dnf/=

#+BEGIN_SRC bash
  # Only clean cached packages
  sudo dnf clean packages

  # Only clean cached packages and meta data, `dnf` will sync the meta data next time
  sudo dnf clean all

  # Print the cachedir size
  /usr/bin/du -ch -d1 //var/cache/dnf/
  # 0       /var/cache/dnf/fedora-1229c74f480af200
  # 0       /var/cache/dnf/fedora-cisco-openh264-0ceaef441f72af2f
  # 0       /var/cache/dnf/updates-fa4e299104aa601e
  # 0       /var/cache/dnf/rpmfusion-nonfree-nvidia-driver-fb1fbda356ce7a69
  # 8.0M    /var/cache/dnf/
  # 8.0M    total
#+END_SRC

Above commands only operate in =/var/cache/dnf/= but not affect =/var/tmp/dnf-XXXX= folder, you need to remove them manually when needed:


*** =dnf group= concept

**** Basic concept

Groups are virtual collections of packages, it allows you to install a bunch of packages in an easy way, for example:

#+BEGIN_SRC bash
  dnf group info "C Development Tools and Libraries"

  Last metadata expiration check: 0:07:42 ago on Sun 21 Jan 2024 12:56:08.
  Group: C Development Tools and Libraries
   Description: These tools include core development tools such as automake, gcc and debuggers.
   Mandatory Packages:
     autoconf
     automake
     binutils
     bison
     flex
     gcc
     gcc-c++
     gdb
     glibc-devel
     libtool
     make
     pkgconf
     strace
   Default Packages:
     byacc
     ccache
     cscope
     ctags
     elfutils
     indent
     ltrace
     perf
     valgrind
   Optional Packages:
     ElectricFence
     astyle
     cbmc
     check
     cmake
     coan
     cproto
     insight
     nasm
     pscan
     python3-scons
     remake
     scorep
     splint
     yasm
     zzuf  
#+END_SRC

So, here is how you manipulate all those list packages:

#+BEGIN_SRC bash
  # All Mandatory and Default packages will  be installed  whenever  possible. 
  sudo dnf group install "C Development Tools and Libraries"

  # If you want to install `Optional Packages` as well
  sudo dnf group install --with-optional "C Development Tools and Libraries"

  # Update all group pacakges
  sudo dnf group upgrade "C Development Tools and Libraries"

  # Remove all group pacakges
  sudo dnf group remove "C Development Tools and Libraries"
#+END_SRC


**** Group and subgroup


=Group > subgroup > (many another subgroup) > packages= is the way that how =Fedora= manage package relationship, for example:

#+BEGIN_SRC bash
  dnf group info "Fedora Server Edition"
  # Last metadata expiration check: 0:16:50 ago on Sun 21 Jan 2024 12:56:08.
  # Environment Group: Fedora Server Edition
  #  Description: An integrated, easier to manage server.
  #  Mandatory Groups:
  #    Common NetworkManager Submodules
  #    Core
  #    Fedora Server product core
  #    Hardware Support
  #    Headless Management
  #    Standard
  #  Optional Groups:
  #    Container Management
  #    Domain Membership
  #    Guest Agents
  #    Hardware Support for Server Systems

  dnf group info "Common NetworkManager Submodules"
  # Last metadata expiration check: 0:17:19 ago on Sun 21 Jan 2024 12:56:08.
  # Group: Common NetworkManager Submodules
  #  Description: This group contains NetworkManager submodules that are commonly used, but may not be wanted in some streamlined configurations.
  #  Default Packages:
  #    NetworkManager-bluetooth
  #    NetworkManager-wifi
  #    NetworkManager-wwan
  #    dhcp-client
  #    dnsmasq
  #    iptables-nft
  #    wpa_supplicant
#+END_SRC

=Fedora Server Edition= include =Common NetworkManager Submodules= subgroup and it contains a bunch of packages, that's way how it organises a lot of packages based on their relationship.

Also, that's how you can figure out what packages you needed for you custom =Fedora=.

For example:

- =dnf group info "Hardware Support"= gives me all the available firmware package names I needed .
- =dnf group info "Core"= gives me all necessary package names I should have as a base, then I can install extra to custom my =Fedora= on top of it.


*** Man page and help
For more details, plz read =man dnf=, then you can search keyword like =Install Command, Install Examples, Search Command, Search Examples, Remove Command, Remove Examples= etc, document is quite good actually!!!

Or quick read from here: https://docs.fedoraproject.org/en-US/quick-docs/dnf/


** Manage network and WIFI

You need to install the =NeworkManager= package, it contains the =nmcli= command line tool to handle your network configurations.

#+BEGIN_SRC bash
  sudo dnf install NetworkManager
#+END_SRC

*** How to list all devices status

#+BEGIN_SRC bash
  nmcli device status
  # DEVICE  TYPE      STATE                   CONNECTION
  # enp0s5  ethernet  connected               Wired connection 1
  # lo      loopback  connected (externally)  lo
#+END_SRC


*** How to show NIC ip address

#+BEGIN_SRC bash
  nmcli device show enp0s5
  # GENERAL.DEVICE:                         enp0s5
  # GENERAL.TYPE:                           ethernet
  # GENERAL.HWADDR:                         00:1C:42:73:03:55
  # GENERAL.MTU:                            1500
  # GENERAL.STATE:                          100 (connected)
  # GENERAL.CONNECTION:                     Wired connection 1
  # GENERAL.CON-PATH:                       /org/freedesktop/NetworkManager/ActiveConnection/2
  # WIRED-PROPERTIES.CARRIER:               on
  # IP4.ADDRESS[1]:                         192.168.1.102/24
  # IP4.GATEWAY:                            192.168.1.200
  # IP4.ROUTE[1]:                           dst = 192.168.1.0/24, nh = 0.0.0.0, mt = 100
  # IP4.ROUTE[2]:                           dst = 0.0.0.0/0, nh = 192.168.1.200, mt = 100
  # IP4.DNS[1]:                             192.168.1.200
  # IP6.ADDRESS[1]:                         fe80::f7f2:f710:c5f5:447/64
  # IP6.GATEWAY:                            --
  # IP6.ROUTE[1]:                           dst = fe80::/64, nh = ::, mt = 1024
#+END_SRC


*** WIFI related

#+BEGIN_SRC bash
  # Get Wifi status
  nmcli radio wifi

  # Turn wifi on or off
  nmcli radio wifi <on|off>

  # List available access points(AP) to connect to
  nmcli device wifi list

  # Refresh previous list
  nmcli device wifi rescan

  # Connect to WIFI
  nmcli device wifi connect <SSID|BSSID>

  # Connect to hidden WIFI
  nmcli device wifi connect <SSID|BSSID> hidden yes

  # Connect to WIFI with password
  nmcli device wifi connect <SSID|BSSID> password <password>
#+END_SRC

