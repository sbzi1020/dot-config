# -*- mode: snippet -*-
# name: stackFallback
# key: stackFallback
# --
var gpa = std.heap.GeneralPurposeAllocator(.{}){};
const gpa_allocator = gpa.allocator();
defer {
    const deinit_status = gpa.deinit();
    //fail test; can't try in defer as defer is executed after we return
    if (deinit_status == .leak) std.testing.expect(false) catch @panic(\"\\nGPA detected a memory leak!!!\\n\");
}

// var sfa = std.heap.stackFallback(10, std.heap.page_allocator);
var sfa = std.heap.stackFallback(10, gpa_allocator);
const allocator = sfa.get();