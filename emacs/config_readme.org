* Configuration README

This README contains very useful informat about =Emacs Configuration=.


* About the default configuration file and its location

1. In =MacOS=, the default configuration file are located in =~/.emacs.d=

   If you want to use =~/.config/emacs= instead of =~/.emacs.d=, then you HAVE TO remove =~/.emacs.d=.
   Otherwise, it won't load the =~/.config/emacs/init.el=!

2. All configurations are separated into different =.org= files in =~/.config/emacs=, then use =org-babel-load-file= function load all =Lisp= source blocks.


* How to install =Emacs=

** 1. MacOS

    You should install =Emacs Plus= to support all missing features in =Mac version=!!!

    https://github.com/d12frosted/homebrew-emacs-plus

    You can choose to install different versions:

    #+BEGIN_SRC bash

      # brew tap d12frosted/emacs-plus
      # brew install emacs-plus    [options] # install the latest release (Emacs 29)
      # brew install emacs-plus@30 [options] # install Emacs 30 (master)
      # brew install emacs-plus@29 [options] # install Emacs 29
      # brew install emacs-plus@28 [options] # install Emacs 28
      # brew install emacs-plus@27 [options] # install Emacs 27
      # brew install emacs-plus@26 [options] # install Emacs 26

    #+END_SRC


    By default (without any addition options) this formula install Cocoa version of Emacs with support of =gnutls=, =imagemagick= (not included by default with =emacs-plus@29= and =emacs-plus@30=), =librsvg=, =libxml2=, dynamic modules and multicolor fonts. Please see the list of available options to disable any bit of default behaviour or add even more stuff.

    Any I prefer install with the following options/features:

    | Option                    | Description                                                                             |
    |---------------------------+-----------------------------------------------------------------------------------------|
    | --with-native-comp        | Native compilation, super important for solving the performance issue.                  |
    | --with-imagemagick        | build with imagemagick support.                                                         |
    | --with-modern-yellow-icon | More icons you can choose form  https://github.com/d12frosted/homebrew-emacs-plus#icons |


    #+BEGIN_SRC bash
      brew tap d12frosted/emacs-plus

      brew install emacs-plus \
          --with-native-comp \
          --with-imagemagick \
          --with-modern-yellow-icon

    #+END_SRC


    And you got 2 ways to confirm that it's the =Native compilation= verison:

    A. Open emacs and run the following =LISP= command:

        #+BEGIN_SRC emacs-lisp
        (native-comp-available-p)
        #+END_SRC

        If it returns =t=, that mean YES, that's the =Native compilation= version:)


    B. Open emacs and run the following =LISP= command:

        #+BEGIN_SRC emacs-lisp
          (describe-variable 'system-configuration-features (current-buffer) nil)
        #+END_SRC

        If the output contains =NATIVE_COMP=, that mean YES, that's the =Native compilation= version:)


** 2. Arch Linux

    #+BEGIN_SRC bash
      # doas pacman --refresh --sync emacs

      # You should install the native compilation built-in version!!!
      doas pacman --refresh --sync emacs-nativecomp
    #+END_SRC

    If you see the following error when you run =emacs=:

    #+BEGIN_SRC bash
      /usr/lib/libc.so.6: Version "GBLIC_X.Y.Z" not found
    #+END_SRC

    then you should re-install (upgrade) =glibc= to the corect version:

    #+BEGIN_SRC bash
      doas pacman --refresh --sync glibc
    #+END_SRC


    Here is how to check the version you installed whether =native compilation= or not:

    Open =emacs= and run ~(native-comp-available-p)~, if it returns =t= that means YES, =nil= is not.


* First time to run =Emacs=

If you copy your custom =Emacs= configuration to =~/.config/emacs=, then you should run the =Emacs= in
daemon mode, as the it takes time to download all packages for the first time.

Actually, you should add the debug flag like this:

#+BEGIN_SRC bash
  emacs --daemon --debug-init
#+END_SRC

Then you can see the detail debug log. Also, sometimes it will fail to connect to =melpa.org/443=, if you
see the following error:

#+BEGIN_SRC bash
  Contacting host: stable.melpa.org:443

  # Ignore output
  ...... 

  # Finally, fail to install some pacakges
  Error (use-package): Failed to install org-bullets: melpa.org/443 Temporary failure in name resolution
#+END_SRC

So, you need to kill the existing =emacs= process and re-run =emacs --daemon --debug-init= command again
until you see it runs successfully like this:

#+BEGIN_SRC bash
  emacs --daemon --debug-init

  # Warning: due to a long standing Gtk+ bug
  # https://gitlab.gnome.org/GNOME/gtk/issues/221
  # Emacs might crash when run in daemon mode and the X11 connection is unexpectedly lost.
  # Using an Emacs configured with --with-x-toolkit=lucid does not have this problem.
  # Loading /home/wison/.config/emacs/settings.el (source)...
  # Loading /home/wison/.config/emacs/settings.el (source)...done
  # Loaded /home/wison/.config/emacs/settings.el
  # Loading /home/wison/.config/emacs/package.el (source)...
  # Loading /home/wison/.config/emacs/package.el (source)...done
  # Loaded /home/wison/.config/emacs/package.el
  # Loading /home/wison/.config/emacs/evil.el (source)...
  # Loading /home/wison/.config/emacs/evil.el (source)...done
  # Loaded /home/wison/.config/emacs/evil.el
  # Starting Emacs daemon.

#+END_SRC

From now on, you can use the following commands to launch =emacs= in the different mode:

#+BEGIN_SRC bash
  # Open emacs in GUI mode (`-a` means if Emacs server doesn't run yet, then fallback to the given EDITOR)
  emacsclient -c -a "nvim" &

  # Open emacs in terminal mode
  emacsclient -t -a "nvim"

  # Edit Emac configuration in GUI/terminal mode
  emacsclient -c -a "nvim" ~/.config/emacs/init.el &
  emacsclient -t -a "nvim" ~/.config/emacs/init.el
#+END_SRC

Keep that in mind:

when you use =-t= to run it in terminal mode, make sure to NOT use with =&=, as it can't run in background!:)


* Install =Treesitter langauge grammar=

You need to run the following command to install all treesitter language grammars.

#+begin_src emacs-lisp
  (mapc #'treesit-install-language-grammar (mapcar #'car treesit-language-source-alist))
#+end_src


* =Mode= in =Emacs=

=Mode= means =FileType= in =Vim= and that's it:)

Different =Mode= effects the visual result in buffer, and you can turn the current buffer into any =Mode= you want, just run =xxx-mode= function.

For example, you open an =.org= file, then it goest into =Org Mode= automatic, but you can run the following
function to change the mode:

#+BEGIN_SRC emacs-lisp
  c-mode    ;Treat the current file as '.c' file, and the 'Org' color and syntax will go away!
  org-mode  ;Treat the current file as '.org' file and re-enable 'Org' color and syntax highlight.
#+END_SRC


* Learn how to use ~use-package~

https://github.com/jwiegley/use-package#getting-started


* Edit =emacs-lisp= source code in =org-mode=

When editing =elisp= source code your =org= file inside the =emacs-lisp= code block like below:

#+BEGIN_SRC emacs-lisp
  (message "Hey:)")
#+END_SRC

The best way to do that is pressing =C-c '= inside the code block to open a source code editing window, as that window opens in the =emacs-lisp= major mode (or any major mode you specified following by the =#+BEGIN_SRC=), then your =company-mode= and =lsp-mode= work well!!!

Then you don't need to switch to the =*scratch*= to edit your code for having the better coding experience and switch back:)


* How to run shell command in =Emacs=

You run run any LISP expressions in =evil commmand mode= which means you type ~:~ and follow by your LISP expression.

But you also can run a shell commmand by ~:!~ and follow by your shell command.

In the =dired-mode=, you can run a shell command by ~!~ or ~&~:

+ ~!~ runs the command ~dired-do-shell-command~ to execute your shell command.
+ ~&~ runs the command ~dired-do-async-shell-command~ to execute your shell command asynchronously.

And 2 things you need to know:

1. The shell command result will print out in the echo area or open a new buffer (depending on the output length).

2. You =SHOULD NOT= run any shell command that asks for interactive with =vim-keybindings=, as the command will halt and your keystrokes only go into the evil mode and operate inside the buffer (not passing to the shell command)!!!


* Important default keybindings in =Emacs=

Even you install =Evil= package to enable =Vim Keybindings=, but sometimes in some kind of the mode, your evil keybindings still won't work.

So, you need to use the default =Emacs= keybindings in those siutations, what's why you better to know
some of them from the beginning.

Here are the common keybindings you should know about when dealing with =Emacs= :

| Keybindgins      | Description                                                                                 |
|------------------+---------------------------------------------------------------------------------------------|
| [Run function]   |                                                                                             |
| =M-x=              | =M= means =Alt=, run any function, type to filter by name, can =tab=.                             |
|                  |                                                                                             |
| [Close and exit] |                                                                                             |
| =C-x C-c=          | Bascially, exit =Emacs=, will ask you save unsaved buffer.                                    |
| =C-x 4 0=          | Call =kill-buffer-and-window= to close current window and buffer.                             |
|                  |                                                                                             |
| [File & Dired]   |                                                                                             |
| =C-x C-f=          | Call =find-file=.                                                                             |
| =C-x d=            | Call =dired=                                                                                  |
|                  |                                                                                             |
| [Window]         |                                                                                             |
| =C-x 0=            | Call =delete-window= to close current window, but NOT close the buffer.                       |
| =C-x 1=            | Call =delete-other-windows= to kill all other windows except the current window               |
| =C-x 2=            | Call =split-window-below= to split the window up and down direction                           |
| =C-x 3=            | Call =split-window-right= to split window on the right                                        |
|                  |                                                                                             |
| [Org mode]       |                                                                                             |
| =<tab>=            | Call =org-cycle= to fold or unfold the point at heading sub-tree                              |
| =<backtab>=        | Call =org-shifttab= to fold or unfold all heading sub-tree                                    |
| =C-c C-c=          | Format the org table if you're in a =org= file and cursor inside a table                      |
| =M-RET=            | Call =org-meta-return= to add the next heading/list/item with the correct level               |
| C-j              | Call =org-forward-heading-same-level= to jump down to next (same level) heading.              |
| C-k              | Call =org-backward-heading-same-level= to jump up to next (same level) heading.               |
| M-j              | Call =outline-move-subtree-down= to move current heading down to next (same level).           |
| M-k              | Call =outline-move-subtree-up=  to move current heading up to next (same level).              |
| =S-<left>=         | Call =org-shiftleft= to change item bullet type, move table cell to left, switch heading      |
| =S-<right>=        | Call =org-shiftright= to change item bullet type, move table cell to right, switch heading    |
|                  | Call =consult-org-heading= to list all org file heading into minibuffer                       |
| =C-c '=            | Call =org-edit-special= to open the src editing window (with LSP support!!!)                  |
| =C-c '=            | Call =org-edit-src-exit= to accept the change and exit                                        |
| =C-c C-k=          | Call =org-edit-src-abort= to abort and exit                                                   |
| =C-c C-x C-v=      | Call =org-toggle-inline-images= to toggle image link to show image                            |
|                  |                                                                                             |
| [Dired]          |                                                                                             |
| =C-x d=            | Call =dired=                                                                                  |
| =(=                | Call =dired-hide-details-mode= to toggle detail mode                                          |
| =^=                | Call =dired-up-directory=                                                                     |
| =RET=              | Call =dired-find-file=                                                                        |
| =g o=              | Call =dired-find-file-other-window= to open the file in separated window                      |
| =m=                | Call =dired-mark= on file at point                                                            |
| =u=                | Call =dired-unmark= on file at point                                                          |
| =U=                | Call =dired-unmark-all-marks=                                                                 |
| =t=                | Call =dired-toggle-marks= to mark or unmark all files                                         |
| =M=                | Call =dired-do-chmod= to run ~chmod~                                                            |
| =C=                | Call =dired-do-copy=                                                                          |
| =R=                | Call =dired-do-rename= to rename or move file or directory                                    |
| =D=                | Call =dired-do-delete=                                                                        |
| =C-x C-q=          | Call =dired-toggle-read-only= to turn the buffer into =wdired-change-to-wdired-mode=            |
| =C-c C-k=          | Call =wdired-abort-changes= to discard changes in =wdired-change-to-wdired-mode=                |
| =C-c C-c=          | Call =wdired-finish-edit= to accept changes in =wdired-change-to-wdired-mode=                   |
|                  | Call =make-empty-file= to create empty file                                                   |
|                  | Call =mkdir= or =make-directory= to create directories                                          |
| =C-j=              | Call =image-next-file= to render next image (image-mode)                                      |
| =C-k=              | Call =image-previous-file= to render previous image (image-mode)                              |
| =!=                | Call =dired-do-shell-command= reads a shell command on the marked files.                      |
| =&=                | Call =dired-do-async-shell-command= reads a shell command on the marked files asynchronously. |
|                  |                                                                                             |
| [Shell command]  |                                                                                             |
| =:=                | Runs the command =evil-ex= (found in =evil-motion-state-map=) to evaluate LISP expression       |
| =:!=               | Runs the command =evil-shell-command= on a given shell command                                |
|                  |                                                                                             |
| [Image Dired]    |                                                                                             |
|                  | Call =image-dired=                                                                            |
| =RET=              | Call =image-dired-display-thumbnail-original-image=                                           |
| =C-j=              | Call =image-next-file= to render next image (image-dired-image-mode)                          |
| =C-k=              | Call =image-previous-file= to render previous image (image-dired-image-mode)                  |
| =-=                | Call =image-decrease-size= to zoom out the rendered image                                     |
| =+=                | Call =image-increase-size= to zoom out the rendered image                                     |
|                  | Call =image-transform-fit-to-window= to zoom out the rendered image                           |
|                  |                                                                                             |
| [Color]          |                                                                                             |
|                  | Call =list-colors-display=                                                                    |
|                  |                                                                                             |
| [Faces]          |                                                                                             |
|                  | Call =list-faces-display=                                                                     |
|                  |                                                                                             |
| [Theme]          |                                                                                             |
|                  | Call ~consult-theme~ to preview theme                                                         |
|                  |                                                                                             |
