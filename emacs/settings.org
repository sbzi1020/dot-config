* Base settings

** Use =Super= key as =Meta= (But it works in =GUI= mode only)

#+begin_src emacs-lisp
  ;;
  ;; For MacOS
  ;;
  (if (string-equal "darwin" system-type)
          (progn
                  (setq mac-command-modifier 'meta)
                  (message ">>> MacOS, set 'super' key as 'meta' key." system-type)
          )
  )

  ;; ;;
  ;; ;; For Linux
  ;; ;;
  ;; (if (string-equal "gnu/linux" system-type)
  ;;         (progn
  ;;                 (setq x-super-keysym 'meta)
  ;;                 (message ">>> Linux, set 'super' key as 'meta' key." system-type)
  ;;         )
  ;; )

#+end_src


** Hide all UIs that I don't need

#+BEGIN_SRC emacs-lisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (setq inhibit-startup-message t
        use-dialog-box nil)
#+END_SRC


** Use =y-or-n-p= for prompts:

By default, =Emacs= prompts for user confirmation using =yes= or =no.
This setting changes it to use =y= or =n= for shorter and faster responses.

#+begin_src emacs-lisp
  (defalias 'yes-or-no-p 'y-or-n-p)
#+end_src


** Fonts

#+BEGIN_SRC emacs-lisp
  ;; (set-face-attribute 'default nil
  ;;                     :family "Maple Mono"
  ;;                     :weight 'semi-bold
  ;;                     :height 140
  ;; )
  (set-face-attribute 'default nil
                      :family "SauceCodePro Nerd Font"
                      :weight 'semi-bold
                      :height 140
  )
#+END_SRC



** Auto refresh buffer when file has been updated outside Emacs

#+BEGIN_SRC emacs-lisp
  (global-auto-revert-mode 1)
  (setq global-auto-revert-non-file-buffers t)
#+END_SRC


** No auto backup and auto save

#+BEGIN_SRC emacs-lisp
(setq make-backup-files nil
      auto-save-default nil)
#+END_SRC


** Disable remember opened file positions

#+BEGIN_SRC emacs-lisp
  ;; Enable it
  ;;(save-place-mode 1)

  ;; Disable it
  (setq save-place-mode nil)
#+END_SRC


** Line number related

#+BEGIN_SRC emacs-lisp
  (global-display-line-numbers-mode 1)
  (setq display-line-numbers-type 'relative)
  (setq column-number-mode t)
#+END_SRC


** Enable current line background highlight both in terminal and GUI

#+BEGIN_SRC emacs-lisp
;; (when window-system (global-hl-line-mode t))
(global-hl-line-mode t)
#+END_SRC


** Customized variable file

=Emacs= writes some custom settings back to =init.el= and mess up your =init.el= file.
For avoiding this, you need to tell =Emacs= where to save those customized settings and
then load that file.

And you can demostrate this by running =customize-save-variable= and save the
=use-package-always-ensure= to that file when needed.

Also, I don't want to see error message when loading that custom file even it has.

#+BEGIN_SRC emacs-lisp
(setq custom-file (locate-user-emacs-file "custom-vars.el"))
(load custom-file 'noerror 'nomessage)
#+END_SRC


** Dired settings

Show hidden files by default.

#+BEGIN_SRC emacs-lisp
;; (when window-system (global-hl-line-mode t))
(setq dired-listing-switches "-lhta")
#+END_SRC


** Window/frame transparent

Setting the transparent background is very different between =GUI= mode and =Terminal= mode, so you better do that in the  A hook handler (especially after the init window frame has been created and the color theme has been loaded)

For detailed steps about =Emacs= startup sequence, read this:

https://www.gnu.org/software/emacs/manual/html_node/elisp/Startup-Summary.html


#+begin_src emacs-lisp 
  (defun my-set-transparent-gui()
    (message ">>> [ my-set-transarent-background ] - call 'my-set-transparent-gui'")
    ;;
    ;; Force to set a particular background color for better transparent effect.
    ;;
    (set-face-attribute 'default nil :background "#23211B")

    (set-frame-parameter nil 'alpha-background 95)
    (add-to-list 'default-frame-alist '(alpha-background . 95))
  )

  (defun my-set-transparent-terminal()
    (message ">>> [ my-set-transarent-background ] - call 'my-set-transparent-terminal'")
    (set-face-attribute 'default nil :background "nil")
  )

  (defun my-set-transarent-background()
    (interactive)
    (message ">>> [ my-set-transarent-background ] - display-graphics-p result: %s" (display-graphic-p nil))
    (if (display-graphic-p nil)
            (my-set-transparent-gui)
            (my-set-transparent-terminal)
    )
  )

  ;; (add-hook 'emacs-startup-hook #'my-set-transarent-background)
#+end_src


** Auto select help window

=describe-xxxx= function opens a new help buffer and window, but the help window doesn't be
selected by default, it's quite annoying as you need to move to that window before you can
close it.

But you can make it auto be selected by the following settings:

#+begin_src emacs-lisp 
  (setq help-window-select t)
#+end_src


** Fixed =TAB= width

#+BEGIN_SRC emacs-lisp
  (setq tab-width 4)
#+END_SRC


** Org mode edit src in current window

When pressing =C-c '= inside the code block, which way I prefer to open the src editing window: ~current-window~

#+BEGIN_SRC emacs-lisp
  (setq org-src-window-setup 'current-window)
  ;; (setq org-src-window-setup 'split-window-rIght)
#+END_SRC

Inside the src editing window, press =C-c '= again to accept change and exit; press 'C-c C-k' to abort and exit.


** Enable auto pair mode

Auto pair =()= and =[]=

#+BEGIN_SRC emacs-lisp
  (electric-pair-mode)
#+END_SRC
